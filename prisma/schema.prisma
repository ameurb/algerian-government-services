// SQLite-compatible schema for Government Services Assistant
// Optimized for AI-powered multilingual government service assistance

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/government-services.db"
}

// Government Services Model - Core entity for AI assistant
model GovernmentService {
  id              Int               @id @default(autoincrement())
  
  // Multilingual Basic Information
  name            String            // Arabic name
  nameEn          String?           // English name  
  nameFr          String?           // French name
  description     String            // Arabic description
  descriptionEn   String?           // English description
  descriptionFr   String?           // French description
  
  // Service Classification
  serviceId       String?           // Original bawabatic service ID
  category        String            // Service category as string
  subcategory     String?           // Subcategory
  subcategoryEn   String?           // English subcategory
  subcategoryFr   String?           // French subcategory
  serviceType     String?           // Type: خدمة، إجراء، etc.
  serviceTypeEn   String?           // English service type
  serviceTypeFr   String?           // French service type
  
  // Government Structure
  ministry        String?           // Ministry name
  ministryEn      String?           // Ministry name (English)
  ministryFr      String?           // Ministry name (French)
  agency          String?           // Specific agency/department
  agencyEn        String?           // Agency name (English) 
  agencyFr        String?           // Agency name (French)
  
  // Target Information
  targetGroup     String?           // Target group (Arabic)
  targetGroupEn   String?           // Target group (English)
  targetGroupFr   String?           // Target group (French)
  eligibility     String?           // Eligibility criteria
  eligibilityEn   String?           // English eligibility
  eligibilityFr   String?           // French eligibility
  
  // Required Documents and Process (as delimited strings)
  documents       String?           // Required documents (pipe-separated)
  documentsEn     String?           // English documents (pipe-separated)
  documentsFr     String?           // French documents (pipe-separated)
  requirements    String?           // Requirements (pipe-separated)
  requirementsEn  String?           // English requirements (pipe-separated)
  requirementsFr  String?           // French requirements (pipe-separated)
  process         String?           // Step-by-step process (pipe-separated)
  processEn       String?           // English process (pipe-separated)
  processFr       String?           // French process (pipe-separated)
  
  // Service Details
  fee             String?           // Cost information
  feeEn           String?           // English cost info
  feeFr           String?           // French cost info
  processingTime  String?           // Processing time
  processingTimeEn String?          // English processing time
  processingTimeFr String?          // French processing time
  
  // Contact and Access
  office          String?           // Responsible office
  officeEn        String?           // Office name (English)
  officeFr        String?           // Office name (French)
  contactInfo     String?           // Contact information
  contactPhone    String?           // Phone number
  contactEmail    String?           // Email address
  address         String?           // Physical address
  addressEn       String?           // English address
  addressFr       String?           // French address
  
  // Online Services
  onlineUrl       String?           // Online service URL
  bawabticUrl     String?           // Original bawabatic URL
  digitalForm     String?           // Digital form URL
  
  // Additional Information
  legalFramework  String?           // Legal basis
  legalFrameworkEn String?          // English legal basis
  legalFrameworkFr String?          // French legal basis
  benefits        String?           // Service benefits (pipe-separated)
  benefitsEn      String?           // English benefits (pipe-separated)
  benefitsFr      String?           // French benefits (pipe-separated)
  warnings        String?           // Important warnings (pipe-separated)
  warningsEn      String?           // English warnings (pipe-separated)
  warningsFr      String?           // French warnings (pipe-separated)
  tips            String?           // Helpful tips (pipe-separated)
  tipsEn          String?           // English tips (pipe-separated)
  tipsFr          String?           // French tips (pipe-separated)
  relatedServices String?           // Related service IDs (comma-separated)
  
  // Location and Availability
  wilaya          String?           // Specific wilaya (if applicable)
  commune         String?           // Specific commune (if applicable)
  isOnline        Boolean           @default(false)
  isNational      Boolean           @default(true)
  isActive        Boolean           @default(true)
  
  // AI Enhancement Fields
  keywords        String?           // Search keywords (space separated)
  keywordsEn      String?           // English keywords
  keywordsFr      String?           // French keywords
  searchTags      String?           // Additional search tags
  priority        Int               @default(0) // Search priority weight
  
  // Metadata
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  
  // Relations
  analytics       ServiceAnalytics[]
  
  @@index([category])
  @@index([wilaya])
  @@index([isActive])
  @@index([keywords])
  @@map("government_services")
}

// Chat Sessions for AI Assistant
model ChatSession {
  id          Int           @id @default(autoincrement())
  sessionId   String        @unique
  userId      String?       // Optional user identification
  language    String        @default("ar") // ar, en, fr
  contextData String?       // Conversation context as string
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  lastActive  DateTime      @default(now())
  
  messages    ChatMessage[]
  
  @@index([sessionId])
  @@index([isActive])
  @@map("chat_sessions")
}

// Chat Messages with AI Context
model ChatMessage {
  id          Int         @id @default(autoincrement())
  sessionId   String
  role        String      // USER, ASSISTANT, SYSTEM
  content     String
  language    String?     // Message language
  serviceRefs String?     // Referenced service IDs (comma-separated)
  metadataStr String?     // AI processing metadata as string
  timestamp   DateTime    @default(now())
  
  session     ChatSession @relation(fields: [sessionId], references: [sessionId])
  
  @@index([sessionId])
  @@index([timestamp])
  @@map("chat_messages")
}

// AI Templates and Prompts
model AITemplate {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  template    String      // Markdown template
  language    String      @default("multilingual")
  category    String?     // Template category
  variablesStr String?    // Template variables as string
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  @@index([name])
  @@index([category])
  @@map("ai_templates")
}

// Service Usage Analytics
model ServiceAnalytics {
  id          Int         @id @default(autoincrement())
  serviceId   Int
  searchQuery String?     // User's search query
  language    String?     // Query language
  resultRank  Int?        // Position in search results
  clicked     Boolean     @default(false)
  sessionId   String?
  timestamp   DateTime    @default(now())
  
  service     GovernmentService @relation(fields: [serviceId], references: [id])
  
  @@index([serviceId])
  @@index([timestamp])
  @@map("service_analytics")
}